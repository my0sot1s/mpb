// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product/product.proto

package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "common"
import marker "marker"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Products struct {
	Products             []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Anchor               string     `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Total                string     `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Products) Reset()         { *m = Products{} }
func (m *Products) String() string { return proto.CompactTextString(m) }
func (*Products) ProtoMessage()    {}
func (*Products) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{0}
}
func (m *Products) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Products.Unmarshal(m, b)
}
func (m *Products) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Products.Marshal(b, m, deterministic)
}
func (dst *Products) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Products.Merge(dst, src)
}
func (m *Products) XXX_Size() int {
	return xxx_messageInfo_Products.Size(m)
}
func (m *Products) XXX_DiscardUnknown() {
	xxx_messageInfo_Products.DiscardUnknown(m)
}

var xxx_messageInfo_Products proto.InternalMessageInfo

func (m *Products) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Products) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

func (m *Products) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

type Product struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Images               []*common.MediaInfo `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Description          string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Created              int32               `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	CategoriesId         []string            `protobuf:"bytes,6,rep,name=categories_id,json=categoriesId,proto3" json:"categories_id,omitempty"`
	Categories           []*marker.Category  `protobuf:"bytes,7,rep,name=categories,proto3" json:"categories,omitempty"`
	GroupsId             []string            `protobuf:"bytes,8,rep,name=groups_id,json=groupsId,proto3" json:"groups_id,omitempty"`
	Groups               []*marker.Group     `protobuf:"bytes,9,rep,name=groups,proto3" json:"groups,omitempty"`
	State                string              `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	ShipmentId           string              `protobuf:"bytes,11,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	Shipment             *Shipment           `protobuf:"bytes,12,opt,name=shipment,proto3" json:"shipment,omitempty"`
	TagsId               []string            `protobuf:"bytes,13,rep,name=tags_id,json=tagsId,proto3" json:"tags_id,omitempty"`
	Tags                 []*marker.Tag       `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`
	Price                int32               `protobuf:"varint,15,opt,name=price,proto3" json:"price,omitempty"`
	AverageRate          float32             `protobuf:"fixed32,16,opt,name=average_rate,json=averageRate,proto3" json:"average_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{1}
}
func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (dst *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(dst, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetImages() []*common.MediaInfo {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetCreated() int32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Product) GetCategoriesId() []string {
	if m != nil {
		return m.CategoriesId
	}
	return nil
}

func (m *Product) GetCategories() []*marker.Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Product) GetGroupsId() []string {
	if m != nil {
		return m.GroupsId
	}
	return nil
}

func (m *Product) GetGroups() []*marker.Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Product) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Product) GetShipmentId() string {
	if m != nil {
		return m.ShipmentId
	}
	return ""
}

func (m *Product) GetShipment() *Shipment {
	if m != nil {
		return m.Shipment
	}
	return nil
}

func (m *Product) GetTagsId() []string {
	if m != nil {
		return m.TagsId
	}
	return nil
}

func (m *Product) GetTags() []*marker.Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Product) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetAverageRate() float32 {
	if m != nil {
		return m.AverageRate
	}
	return 0
}

type Shipments struct {
	Shipment             *Shipment          `protobuf:"bytes,1,opt,name=shipment,proto3" json:"shipment,omitempty"`
	Products             []*ShipmentProduct `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Shipments) Reset()         { *m = Shipments{} }
func (m *Shipments) String() string { return proto.CompactTextString(m) }
func (*Shipments) ProtoMessage()    {}
func (*Shipments) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{2}
}
func (m *Shipments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shipments.Unmarshal(m, b)
}
func (m *Shipments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shipments.Marshal(b, m, deterministic)
}
func (dst *Shipments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shipments.Merge(dst, src)
}
func (m *Shipments) XXX_Size() int {
	return xxx_messageInfo_Shipments.Size(m)
}
func (m *Shipments) XXX_DiscardUnknown() {
	xxx_messageInfo_Shipments.DiscardUnknown(m)
}

var xxx_messageInfo_Shipments proto.InternalMessageInfo

func (m *Shipments) GetShipment() *Shipment {
	if m != nil {
		return m.Shipment
	}
	return nil
}

func (m *Shipments) GetProducts() []*ShipmentProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type Shipment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Notes                []string `protobuf:"bytes,3,rep,name=notes,proto3" json:"notes,omitempty"`
	BasicInfo            string   `protobuf:"bytes,4,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	Created              int32    `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	State                string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shipment) Reset()         { *m = Shipment{} }
func (m *Shipment) String() string { return proto.CompactTextString(m) }
func (*Shipment) ProtoMessage()    {}
func (*Shipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{3}
}
func (m *Shipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shipment.Unmarshal(m, b)
}
func (m *Shipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shipment.Marshal(b, m, deterministic)
}
func (dst *Shipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shipment.Merge(dst, src)
}
func (m *Shipment) XXX_Size() int {
	return xxx_messageInfo_Shipment.Size(m)
}
func (m *Shipment) XXX_DiscardUnknown() {
	xxx_messageInfo_Shipment.DiscardUnknown(m)
}

var xxx_messageInfo_Shipment proto.InternalMessageInfo

func (m *Shipment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Shipment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shipment) GetNotes() []string {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Shipment) GetBasicInfo() string {
	if m != nil {
		return m.BasicInfo
	}
	return ""
}

func (m *Shipment) GetCreated() int32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Shipment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ShipmentProduct struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId            string   `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product              *Product `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Quantity             int32    `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Note                 string   `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	UnitPrice            int32    `protobuf:"varint,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	Discount             float32  `protobuf:"fixed32,7,opt,name=discount,proto3" json:"discount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShipmentProduct) Reset()         { *m = ShipmentProduct{} }
func (m *ShipmentProduct) String() string { return proto.CompactTextString(m) }
func (*ShipmentProduct) ProtoMessage()    {}
func (*ShipmentProduct) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{4}
}
func (m *ShipmentProduct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShipmentProduct.Unmarshal(m, b)
}
func (m *ShipmentProduct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShipmentProduct.Marshal(b, m, deterministic)
}
func (dst *ShipmentProduct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShipmentProduct.Merge(dst, src)
}
func (m *ShipmentProduct) XXX_Size() int {
	return xxx_messageInfo_ShipmentProduct.Size(m)
}
func (m *ShipmentProduct) XXX_DiscardUnknown() {
	xxx_messageInfo_ShipmentProduct.DiscardUnknown(m)
}

var xxx_messageInfo_ShipmentProduct proto.InternalMessageInfo

func (m *ShipmentProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShipmentProduct) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ShipmentProduct) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ShipmentProduct) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ShipmentProduct) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ShipmentProduct) GetUnitPrice() int32 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *ShipmentProduct) GetDiscount() float32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

type ShipmentItems struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Notes                []string         `protobuf:"bytes,3,rep,name=notes,proto3" json:"notes,omitempty"`
	ShipmentProduct      *ShipmentProduct `protobuf:"bytes,4,opt,name=shipment_product,json=shipmentProduct,proto3" json:"shipment_product,omitempty"`
	Created              string           `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	State                string           `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Price                int32            `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Discount             float32          `protobuf:"fixed32,8,opt,name=discount,proto3" json:"discount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShipmentItems) Reset()         { *m = ShipmentItems{} }
func (m *ShipmentItems) String() string { return proto.CompactTextString(m) }
func (*ShipmentItems) ProtoMessage()    {}
func (*ShipmentItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{5}
}
func (m *ShipmentItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShipmentItems.Unmarshal(m, b)
}
func (m *ShipmentItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShipmentItems.Marshal(b, m, deterministic)
}
func (dst *ShipmentItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShipmentItems.Merge(dst, src)
}
func (m *ShipmentItems) XXX_Size() int {
	return xxx_messageInfo_ShipmentItems.Size(m)
}
func (m *ShipmentItems) XXX_DiscardUnknown() {
	xxx_messageInfo_ShipmentItems.DiscardUnknown(m)
}

var xxx_messageInfo_ShipmentItems proto.InternalMessageInfo

func (m *ShipmentItems) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShipmentItems) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShipmentItems) GetNotes() []string {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *ShipmentItems) GetShipmentProduct() *ShipmentProduct {
	if m != nil {
		return m.ShipmentProduct
	}
	return nil
}

func (m *ShipmentItems) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ShipmentItems) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ShipmentItems) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ShipmentItems) GetDiscount() float32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

type OrderItems struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductsId           []string   `protobuf:"bytes,2,rep,name=products_id,json=productsId,proto3" json:"products_id,omitempty"`
	Products             []*Product `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	Quantity             int32      `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                int32      `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Discount             float32    `protobuf:"fixed32,6,opt,name=discount,proto3" json:"discount,omitempty"`
	CreatedAt            string     `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            string     `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OrderItems) Reset()         { *m = OrderItems{} }
func (m *OrderItems) String() string { return proto.CompactTextString(m) }
func (*OrderItems) ProtoMessage()    {}
func (*OrderItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{6}
}
func (m *OrderItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderItems.Unmarshal(m, b)
}
func (m *OrderItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderItems.Marshal(b, m, deterministic)
}
func (dst *OrderItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItems.Merge(dst, src)
}
func (m *OrderItems) XXX_Size() int {
	return xxx_messageInfo_OrderItems.Size(m)
}
func (m *OrderItems) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItems.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItems proto.InternalMessageInfo

func (m *OrderItems) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderItems) GetProductsId() []string {
	if m != nil {
		return m.ProductsId
	}
	return nil
}

func (m *OrderItems) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *OrderItems) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderItems) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderItems) GetDiscount() float32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *OrderItems) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *OrderItems) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

type Orders struct {
	Orders               []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Anchor               string   `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Orders) Reset()         { *m = Orders{} }
func (m *Orders) String() string { return proto.CompactTextString(m) }
func (*Orders) ProtoMessage()    {}
func (*Orders) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{7}
}
func (m *Orders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orders.Unmarshal(m, b)
}
func (m *Orders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orders.Marshal(b, m, deterministic)
}
func (dst *Orders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orders.Merge(dst, src)
}
func (m *Orders) XXX_Size() int {
	return xxx_messageInfo_Orders.Size(m)
}
func (m *Orders) XXX_DiscardUnknown() {
	xxx_messageInfo_Orders.DiscardUnknown(m)
}

var xxx_messageInfo_Orders proto.InternalMessageInfo

func (m *Orders) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *Orders) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

type Order struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId           []string    `protobuf:"bytes,2,rep,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Customer             []*Customer `protobuf:"bytes,3,rep,name=customer,proto3" json:"customer,omitempty"`
	Price                int32       `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	OrderItems           *OrderItems `protobuf:"bytes,5,opt,name=order_items,json=orderItems,proto3" json:"order_items,omitempty"`
	Discount             float32     `protobuf:"fixed32,6,opt,name=discount,proto3" json:"discount,omitempty"`
	CreatedAt            string      `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            string      `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	State                string      `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{8}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetCustomerId() []string {
	if m != nil {
		return m.CustomerId
	}
	return nil
}

func (m *Order) GetCustomer() []*Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Order) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetOrderItems() *OrderItems {
	if m != nil {
		return m.OrderItems
	}
	return nil
}

func (m *Order) GetDiscount() float32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Order) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Order) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Order) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Customers struct {
	Customers            []*Customer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
	Anchor               string      `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Customers) Reset()         { *m = Customers{} }
func (m *Customers) String() string { return proto.CompactTextString(m) }
func (*Customers) ProtoMessage()    {}
func (*Customers) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{9}
}
func (m *Customers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customers.Unmarshal(m, b)
}
func (m *Customers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customers.Marshal(b, m, deterministic)
}
func (dst *Customers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customers.Merge(dst, src)
}
func (m *Customers) XXX_Size() int {
	return xxx_messageInfo_Customers.Size(m)
}
func (m *Customers) XXX_DiscardUnknown() {
	xxx_messageInfo_Customers.DiscardUnknown(m)
}

var xxx_messageInfo_Customers proto.InternalMessageInfo

func (m *Customers) GetCustomers() []*Customer {
	if m != nil {
		return m.Customers
	}
	return nil
}

func (m *Customers) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

type Customer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname             string   `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Created              string   `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	State                string   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{10}
}
func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (dst *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(dst, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Customer) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Customer) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type PaymentMethod struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{11}
}
func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(dst, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Invoices struct {
	Invoices             []*Invoice `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	Anchor               string     `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	OrderId              string     `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Invoices) Reset()         { *m = Invoices{} }
func (m *Invoices) String() string { return proto.CompactTextString(m) }
func (*Invoices) ProtoMessage()    {}
func (*Invoices) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{12}
}
func (m *Invoices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoices.Unmarshal(m, b)
}
func (m *Invoices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoices.Marshal(b, m, deterministic)
}
func (dst *Invoices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoices.Merge(dst, src)
}
func (m *Invoices) XXX_Size() int {
	return xxx_messageInfo_Invoices.Size(m)
}
func (m *Invoices) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoices.DiscardUnknown(m)
}

var xxx_messageInfo_Invoices proto.InternalMessageInfo

func (m *Invoices) GetInvoices() []*Invoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *Invoices) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

func (m *Invoices) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type Invoice struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              string         `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Order                *Order         `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	CustomerId           string         `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Customer             *Customer      `protobuf:"bytes,5,opt,name=customer,proto3" json:"customer,omitempty"`
	Pm                   *PaymentMethod `protobuf:"bytes,6,opt,name=pm,proto3" json:"pm,omitempty"`
	Note                 string         `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	Price                int32          `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	State                string         `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            string         `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            string         `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	RealPay              int32          `protobuf:"varint,12,opt,name=real_pay,json=realPay,proto3" json:"real_pay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{13}
}
func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (dst *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(dst, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Invoice) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Invoice) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Invoice) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Invoice) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Invoice) GetPm() *PaymentMethod {
	if m != nil {
		return m.Pm
	}
	return nil
}

func (m *Invoice) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Invoice) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Invoice) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Invoice) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Invoice) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Invoice) GetRealPay() int32 {
	if m != nil {
		return m.RealPay
	}
	return 0
}

type Campaigns struct {
	Campaigns            []*Campaign `protobuf:"bytes,1,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Campaigns) Reset()         { *m = Campaigns{} }
func (m *Campaigns) String() string { return proto.CompactTextString(m) }
func (*Campaigns) ProtoMessage()    {}
func (*Campaigns) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{14}
}
func (m *Campaigns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Campaigns.Unmarshal(m, b)
}
func (m *Campaigns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Campaigns.Marshal(b, m, deterministic)
}
func (dst *Campaigns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Campaigns.Merge(dst, src)
}
func (m *Campaigns) XXX_Size() int {
	return xxx_messageInfo_Campaigns.Size(m)
}
func (m *Campaigns) XXX_DiscardUnknown() {
	xxx_messageInfo_Campaigns.DiscardUnknown(m)
}

var xxx_messageInfo_Campaigns proto.InternalMessageInfo

func (m *Campaigns) GetCampaigns() []*Campaign {
	if m != nil {
		return m.Campaigns
	}
	return nil
}

type Campaign struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventName            string              `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Started              int32               `protobuf:"varint,3,opt,name=started,proto3" json:"started,omitempty"`
	Ended                int32               `protobuf:"varint,4,opt,name=ended,proto3" json:"ended,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Image                []*common.MediaInfo `protobuf:"bytes,6,rep,name=image,proto3" json:"image,omitempty"`
	State                string              `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Campaign) Reset()         { *m = Campaign{} }
func (m *Campaign) String() string { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()    {}
func (*Campaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_beb878a4ef6198e9, []int{15}
}
func (m *Campaign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Campaign.Unmarshal(m, b)
}
func (m *Campaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Campaign.Marshal(b, m, deterministic)
}
func (dst *Campaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Campaign.Merge(dst, src)
}
func (m *Campaign) XXX_Size() int {
	return xxx_messageInfo_Campaign.Size(m)
}
func (m *Campaign) XXX_DiscardUnknown() {
	xxx_messageInfo_Campaign.DiscardUnknown(m)
}

var xxx_messageInfo_Campaign proto.InternalMessageInfo

func (m *Campaign) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Campaign) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Campaign) GetStarted() int32 {
	if m != nil {
		return m.Started
	}
	return 0
}

func (m *Campaign) GetEnded() int32 {
	if m != nil {
		return m.Ended
	}
	return 0
}

func (m *Campaign) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Campaign) GetImage() []*common.MediaInfo {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Campaign) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*Products)(nil), "product.Products")
	proto.RegisterType((*Product)(nil), "product.Product")
	proto.RegisterType((*Shipments)(nil), "product.Shipments")
	proto.RegisterType((*Shipment)(nil), "product.Shipment")
	proto.RegisterType((*ShipmentProduct)(nil), "product.ShipmentProduct")
	proto.RegisterType((*ShipmentItems)(nil), "product.ShipmentItems")
	proto.RegisterType((*OrderItems)(nil), "product.OrderItems")
	proto.RegisterType((*Orders)(nil), "product.Orders")
	proto.RegisterType((*Order)(nil), "product.Order")
	proto.RegisterType((*Customers)(nil), "product.Customers")
	proto.RegisterType((*Customer)(nil), "product.Customer")
	proto.RegisterType((*PaymentMethod)(nil), "product.PaymentMethod")
	proto.RegisterType((*Invoices)(nil), "product.Invoices")
	proto.RegisterType((*Invoice)(nil), "product.Invoice")
	proto.RegisterType((*Campaigns)(nil), "product.Campaigns")
	proto.RegisterType((*Campaign)(nil), "product.Campaign")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductStreamClient is the client API for ProductStream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductStreamClient interface {
	// prod
	GetProducts(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Products, error)
	LookupProduct(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Product, error)
	UpsertProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error)
	DeleteProduct(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*common.Nil, error)
	// shipment
	GetShipment(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Shipments, error)
	LookupShipment(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Shipment, error)
	UpsertShipment(ctx context.Context, in *Shipments, opts ...grpc.CallOption) (*Shipments, error)
	// Campain
	GetCampaigns(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Campaigns, error)
	LookupCampaign(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Campaign, error)
	UpsertCampaign(ctx context.Context, in *Campaign, opts ...grpc.CallOption) (*Campaign, error)
	// Order
	GetOrders(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Orders, error)
	LookupOrder(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Order, error)
	InsertOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error)
	// Customer
	GetCustomer(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Customers, error)
	LookupCustomers(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Customer, error)
	UpsertCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*Customer, error)
	// Invoice
	GetInvoice(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Invoices, error)
	LookupInvoice(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Invoice, error)
	UpsertInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error)
}

type productStreamClient struct {
	cc *grpc.ClientConn
}

func NewProductStreamClient(cc *grpc.ClientConn) ProductStreamClient {
	return &productStreamClient{cc}
}

func (c *productStreamClient) GetProducts(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Products, error) {
	out := new(Products)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupProduct(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) UpsertProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/product.ProductStream/UpsertProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) DeleteProduct(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*common.Nil, error) {
	out := new(common.Nil)
	err := c.cc.Invoke(ctx, "/product.ProductStream/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) GetShipment(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Shipments, error) {
	out := new(Shipments)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupShipment(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Shipment, error) {
	out := new(Shipment)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) UpsertShipment(ctx context.Context, in *Shipments, opts ...grpc.CallOption) (*Shipments, error) {
	out := new(Shipments)
	err := c.cc.Invoke(ctx, "/product.ProductStream/UpsertShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) GetCampaigns(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Campaigns, error) {
	out := new(Campaigns)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetCampaigns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupCampaign(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Campaign, error) {
	out := new(Campaign)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) UpsertCampaign(ctx context.Context, in *Campaign, opts ...grpc.CallOption) (*Campaign, error) {
	out := new(Campaign)
	err := c.cc.Invoke(ctx, "/product.ProductStream/UpsertCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) GetOrders(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Orders, error) {
	out := new(Orders)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupOrder(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) InsertOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/product.ProductStream/InsertOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) GetCustomer(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Customers, error) {
	out := new(Customers)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupCustomers(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) UpsertCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/product.ProductStream/UpsertCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) GetInvoice(ctx context.Context, in *common.ReqQuery, opts ...grpc.CallOption) (*Invoices, error) {
	out := new(Invoices)
	err := c.cc.Invoke(ctx, "/product.ProductStream/GetInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) LookupInvoice(ctx context.Context, in *common.ReqId, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/product.ProductStream/LookupInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStreamClient) UpsertInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/product.ProductStream/UpsertInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductStreamServer is the server API for ProductStream service.
type ProductStreamServer interface {
	// prod
	GetProducts(context.Context, *common.ReqQuery) (*Products, error)
	LookupProduct(context.Context, *common.ReqQuery) (*Product, error)
	UpsertProduct(context.Context, *Product) (*Product, error)
	DeleteProduct(context.Context, *common.ReqId) (*common.Nil, error)
	// shipment
	GetShipment(context.Context, *common.ReqQuery) (*Shipments, error)
	LookupShipment(context.Context, *common.ReqId) (*Shipment, error)
	UpsertShipment(context.Context, *Shipments) (*Shipments, error)
	// Campain
	GetCampaigns(context.Context, *common.ReqQuery) (*Campaigns, error)
	LookupCampaign(context.Context, *common.ReqId) (*Campaign, error)
	UpsertCampaign(context.Context, *Campaign) (*Campaign, error)
	// Order
	GetOrders(context.Context, *common.ReqQuery) (*Orders, error)
	LookupOrder(context.Context, *common.ReqId) (*Order, error)
	InsertOrder(context.Context, *Order) (*Order, error)
	// Customer
	GetCustomer(context.Context, *common.ReqQuery) (*Customers, error)
	LookupCustomers(context.Context, *common.ReqId) (*Customer, error)
	UpsertCustomer(context.Context, *Customer) (*Customer, error)
	// Invoice
	GetInvoice(context.Context, *common.ReqQuery) (*Invoices, error)
	LookupInvoice(context.Context, *common.ReqId) (*Invoice, error)
	UpsertInvoice(context.Context, *Invoice) (*Invoice, error)
}

func RegisterProductStreamServer(s *grpc.Server, srv ProductStreamServer) {
	s.RegisterService(&_ProductStream_serviceDesc, srv)
}

func _ProductStream_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetProducts(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupProduct(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_UpsertProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).UpsertProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/UpsertProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).UpsertProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).DeleteProduct(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_GetShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetShipment(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupShipment(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_UpsertShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shipments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).UpsertShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/UpsertShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).UpsertShipment(ctx, req.(*Shipments))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_GetCampaigns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetCampaigns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetCampaigns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetCampaigns(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupCampaign(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_UpsertCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Campaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).UpsertCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/UpsertCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).UpsertCampaign(ctx, req.(*Campaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetOrders(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupOrder(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_InsertOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).InsertOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/InsertOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).InsertOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetCustomer(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupCustomers(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_UpsertCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).UpsertCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/UpsertCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).UpsertCustomer(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_GetInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).GetInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/GetInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).GetInvoice(ctx, req.(*common.ReqQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_LookupInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ReqId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).LookupInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/LookupInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).LookupInvoice(ctx, req.(*common.ReqId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStream_UpsertInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Invoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStreamServer).UpsertInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.ProductStream/UpsertInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStreamServer).UpsertInvoice(ctx, req.(*Invoice))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductStream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.ProductStream",
	HandlerType: (*ProductStreamServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProducts",
			Handler:    _ProductStream_GetProducts_Handler,
		},
		{
			MethodName: "LookupProduct",
			Handler:    _ProductStream_LookupProduct_Handler,
		},
		{
			MethodName: "UpsertProduct",
			Handler:    _ProductStream_UpsertProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _ProductStream_DeleteProduct_Handler,
		},
		{
			MethodName: "GetShipment",
			Handler:    _ProductStream_GetShipment_Handler,
		},
		{
			MethodName: "LookupShipment",
			Handler:    _ProductStream_LookupShipment_Handler,
		},
		{
			MethodName: "UpsertShipment",
			Handler:    _ProductStream_UpsertShipment_Handler,
		},
		{
			MethodName: "GetCampaigns",
			Handler:    _ProductStream_GetCampaigns_Handler,
		},
		{
			MethodName: "LookupCampaign",
			Handler:    _ProductStream_LookupCampaign_Handler,
		},
		{
			MethodName: "UpsertCampaign",
			Handler:    _ProductStream_UpsertCampaign_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _ProductStream_GetOrders_Handler,
		},
		{
			MethodName: "LookupOrder",
			Handler:    _ProductStream_LookupOrder_Handler,
		},
		{
			MethodName: "InsertOrder",
			Handler:    _ProductStream_InsertOrder_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _ProductStream_GetCustomer_Handler,
		},
		{
			MethodName: "LookupCustomers",
			Handler:    _ProductStream_LookupCustomers_Handler,
		},
		{
			MethodName: "UpsertCustomer",
			Handler:    _ProductStream_UpsertCustomer_Handler,
		},
		{
			MethodName: "GetInvoice",
			Handler:    _ProductStream_GetInvoice_Handler,
		},
		{
			MethodName: "LookupInvoice",
			Handler:    _ProductStream_LookupInvoice_Handler,
		},
		{
			MethodName: "UpsertInvoice",
			Handler:    _ProductStream_UpsertInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product/product.proto",
}

func init() { proto.RegisterFile("product/product.proto", fileDescriptor_product_beb878a4ef6198e9) }

var fileDescriptor_product_beb878a4ef6198e9 = []byte{
	// 1328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x06, 0x65, 0xf3, 0x76, 0x68, 0xd9, 0xce, 0x24, 0x7f, 0x7e, 0x46, 0x45, 0x10, 0x95, 0x6d,
	0x53, 0xf7, 0x12, 0x3b, 0xb5, 0x83, 0xa2, 0x8b, 0x6e, 0x5a, 0x17, 0x70, 0x05, 0x34, 0xa9, 0xcb,
	0xa4, 0x6b, 0x61, 0x22, 0x8e, 0x65, 0x22, 0x22, 0x87, 0x21, 0x47, 0x01, 0xf4, 0x06, 0xdd, 0xf7,
	0x11, 0xba, 0xed, 0x93, 0xf4, 0x05, 0xfa, 0x0a, 0x05, 0xba, 0xe9, 0xae, 0xdb, 0x62, 0xae, 0xa4,
	0x48, 0x4a, 0x0e, 0x50, 0x74, 0x25, 0x9e, 0xcb, 0xcc, 0x7c, 0xe7, 0x3b, 0xe7, 0xcc, 0x19, 0xc1,
	0xff, 0x8a, 0x92, 0x26, 0xcb, 0x19, 0x3b, 0x51, 0xbf, 0xc7, 0x45, 0x49, 0x19, 0x45, 0xae, 0x12,
	0x47, 0xb7, 0x67, 0x34, 0xcb, 0x68, 0x7e, 0x22, 0x7f, 0xa4, 0x75, 0x74, 0x3b, 0xc3, 0xe5, 0x2b,
	0x52, 0x9e, 0xc8, 0x1f, 0xa9, 0x8c, 0xae, 0xc0, 0xbb, 0x94, 0x8b, 0x2a, 0xf4, 0x29, 0x78, 0x6a,
	0x83, 0x2a, 0xb4, 0xc6, 0x3b, 0x47, 0xc1, 0xe9, 0xe1, 0xb1, 0x3e, 0x40, 0x39, 0xc5, 0xc6, 0x03,
	0xdd, 0x05, 0x07, 0xe7, 0xb3, 0x6b, 0x5a, 0x86, 0x83, 0xb1, 0x75, 0xe4, 0xc7, 0x4a, 0x42, 0x77,
	0xc0, 0x66, 0x94, 0xe1, 0x45, 0xb8, 0x23, 0xd4, 0x52, 0x88, 0x7e, 0xda, 0x05, 0x57, 0xed, 0x81,
	0xf6, 0x61, 0x90, 0x26, 0xa1, 0x25, 0xcc, 0x83, 0x34, 0x41, 0x08, 0x76, 0x73, 0x9c, 0x11, 0xb5,
	0x8f, 0xf8, 0x46, 0x1f, 0x81, 0x93, 0x66, 0x78, 0x4e, 0xaa, 0x70, 0x47, 0x20, 0xb9, 0x75, 0xac,
	0x62, 0x79, 0x4a, 0x92, 0x14, 0x4f, 0xf2, 0x2b, 0x1a, 0x2b, 0x07, 0x34, 0x86, 0x20, 0x21, 0xd5,
	0xac, 0x4c, 0x0b, 0x96, 0xd2, 0x3c, 0xdc, 0x15, 0xbb, 0x34, 0x55, 0x28, 0x04, 0x77, 0x56, 0x12,
	0xcc, 0x48, 0x12, 0xda, 0x63, 0xeb, 0xc8, 0x8e, 0xb5, 0x88, 0xde, 0x83, 0xe1, 0x0c, 0x33, 0x32,
	0xa7, 0x65, 0x4a, 0xaa, 0x69, 0x9a, 0x84, 0xce, 0x78, 0xe7, 0xc8, 0x8f, 0xf7, 0x6a, 0xe5, 0x24,
	0x41, 0x8f, 0x01, 0x6a, 0x39, 0x74, 0x15, 0x33, 0x8a, 0xc6, 0x73, 0x69, 0x59, 0xc5, 0x0d, 0x1f,
	0xf4, 0x0e, 0xf8, 0xf3, 0x92, 0x2e, 0x0b, 0xb1, 0xa5, 0x27, 0xb6, 0xf4, 0xa4, 0x62, 0x92, 0xa0,
	0x0f, 0xc0, 0x91, 0xdf, 0xa1, 0x2f, 0xb6, 0x1a, 0xea, 0xad, 0x2e, 0xb8, 0x36, 0x56, 0x46, 0xce,
	0x63, 0xc5, 0x30, 0x23, 0x21, 0x48, 0x1e, 0x85, 0x80, 0x1e, 0x40, 0x50, 0x5d, 0xa7, 0x45, 0x46,
	0x72, 0xc6, 0xf7, 0x0e, 0x84, 0x0d, 0xb4, 0x6a, 0x92, 0xa0, 0x47, 0xe0, 0x69, 0x29, 0xdc, 0x1b,
	0x5b, 0x82, 0x3a, 0x9d, 0xc4, 0xe7, 0xca, 0x10, 0x1b, 0x17, 0xf4, 0x7f, 0x70, 0x19, 0x9e, 0x0b,
	0x9c, 0x43, 0x81, 0xd3, 0xe1, 0xe2, 0x24, 0x41, 0x0f, 0x60, 0x97, 0x7f, 0x85, 0xfb, 0x02, 0x63,
	0xa0, 0x31, 0xbe, 0xc0, 0xf3, 0x58, 0x18, 0x38, 0xbe, 0xa2, 0x4c, 0x67, 0x24, 0x3c, 0x10, 0x94,
	0x4a, 0x01, 0xbd, 0x0b, 0x7b, 0xf8, 0x0d, 0x29, 0xf1, 0x9c, 0x4c, 0x4b, 0x0e, 0xfe, 0x70, 0x6c,
	0x1d, 0x0d, 0xe2, 0x40, 0xe9, 0x62, 0xcc, 0x48, 0x54, 0x80, 0xaf, 0x81, 0x54, 0x6b, 0x70, 0xad,
	0x9b, 0xe1, 0x3e, 0x69, 0x94, 0xe8, 0x40, 0x20, 0x0b, 0x3b, 0xee, 0x9d, 0x52, 0x8d, 0x7e, 0xb6,
	0xc0, 0xd3, 0xd6, 0xb7, 0xaa, 0xbe, 0x3b, 0x60, 0xe7, 0x94, 0xa9, 0xe2, 0xf3, 0x63, 0x29, 0xa0,
	0xfb, 0x00, 0x2f, 0x71, 0x95, 0xce, 0xa6, 0x69, 0x7e, 0x45, 0x55, 0x9d, 0xf9, 0x42, 0xc3, 0xeb,
	0x71, 0x4b, 0x95, 0x99, 0x54, 0x3a, 0x8d, 0x54, 0x46, 0xbf, 0x5b, 0x70, 0xd0, 0xc2, 0xdc, 0x01,
	0x77, 0x1f, 0x40, 0x45, 0xc1, 0x33, 0x24, 0x21, 0xfa, 0x4a, 0x33, 0x49, 0xd0, 0xc7, 0xa0, 0x5b,
	0x5e, 0x74, 0x5b, 0x5f, 0xc3, 0x6a, 0x07, 0x34, 0x02, 0xef, 0xf5, 0x12, 0xe7, 0x2c, 0x65, 0x2b,
	0x81, 0xdd, 0x8e, 0x8d, 0x2c, 0x38, 0xa0, 0x8c, 0x08, 0xdc, 0x9c, 0x03, 0xca, 0x08, 0x3f, 0x7a,
	0x99, 0xa7, 0x6c, 0x2a, 0x93, 0xec, 0x88, 0x15, 0x3e, 0xd7, 0x5c, 0x8a, 0x44, 0x8f, 0xc0, 0x4b,
	0xd2, 0x6a, 0x46, 0x97, 0x39, 0x0b, 0x5d, 0x91, 0x64, 0x23, 0x47, 0x7f, 0x59, 0x30, 0xd4, 0x91,
	0x4d, 0x18, 0xc9, 0xaa, 0x7f, 0x41, 0xfa, 0x39, 0x1c, 0x9a, 0x82, 0xd7, 0xb1, 0xee, 0x8a, 0x58,
	0x37, 0x67, 0xfe, 0xa0, 0x6a, 0xd1, 0xda, 0x4a, 0x8d, 0x7f, 0x43, 0x6a, 0xea, 0xda, 0x76, 0x9b,
	0xb5, 0xdd, 0x0c, 0xd9, 0x6b, 0x85, 0xfc, 0xb7, 0x05, 0xf0, 0x7d, 0x99, 0x90, 0xb2, 0x3f, 0xde,
	0x07, 0x10, 0xe8, 0x6a, 0x94, 0x89, 0xe4, 0x11, 0xea, 0xd4, 0xf2, 0x76, 0x6b, 0xde, 0xbd, 0x3b,
	0x37, 0xde, 0xbd, 0xdb, 0x72, 0x69, 0xb0, 0xdb, 0x9b, 0xb0, 0x3b, 0xeb, 0xd8, 0x79, 0xa6, 0x15,
	0x1d, 0x53, 0x2c, 0x93, 0xe9, 0xc7, 0xbe, 0xd2, 0x7c, 0xb5, 0x66, 0x7e, 0xb9, 0x12, 0x81, 0xd7,
	0xe6, 0xaf, 0x57, 0xd1, 0xb7, 0xe0, 0x88, 0xc0, 0x2b, 0xf4, 0x10, 0x1c, 0x2a, 0xbe, 0xd4, 0xf4,
	0xd8, 0x37, 0x11, 0x08, 0x87, 0x58, 0x59, 0x37, 0x4d, 0x8e, 0xe8, 0x97, 0x01, 0xd8, 0xc2, 0xb3,
	0x8f, 0xbe, 0xd9, 0xb2, 0x62, 0x34, 0x23, 0x65, 0x83, 0x3e, 0xad, 0x92, 0xb7, 0x9e, 0x96, 0xcc,
	0xc0, 0xd0, 0x87, 0x9f, 0x2b, 0x43, 0x6c, 0x5c, 0x6a, 0x8e, 0x76, 0x9b, 0x1c, 0x3d, 0x81, 0x40,
	0x20, 0x9c, 0xa6, 0x3c, 0x87, 0x82, 0xbf, 0xe0, 0xf4, 0xf6, 0x7a, 0x10, 0x22, 0xbd, 0x31, 0xd0,
	0x3a, 0xd5, 0xff, 0x19, 0xb3, 0x75, 0x6d, 0xfa, 0xcd, 0x6b, 0xe3, 0x05, 0xf8, 0x3a, 0xa2, 0x0a,
	0x9d, 0x80, 0xaf, 0x83, 0xd2, 0xac, 0xf7, 0x04, 0x5e, 0xfb, 0x6c, 0xe4, 0xfe, 0x57, 0x0b, 0x3c,
	0xed, 0xdf, 0xa1, 0x7f, 0x04, 0xde, 0xd5, 0x72, 0xb1, 0x68, 0x74, 0xac, 0x91, 0x05, 0x95, 0xd7,
	0x34, 0x27, 0x7a, 0xdc, 0x0b, 0x81, 0x6b, 0x49, 0x86, 0xd3, 0x85, 0xba, 0x25, 0xa5, 0xc0, 0xdb,
	0x10, 0x27, 0x49, 0x49, 0xaa, 0x4a, 0xb7, 0xa1, 0x12, 0x9b, 0x0d, 0xea, 0x6c, 0x68, 0x50, 0xb7,
	0x49, 0xc2, 0x19, 0x0c, 0x2f, 0xf1, 0x8a, 0xb7, 0xf8, 0x53, 0xc2, 0xae, 0x69, 0xf2, 0x36, 0x17,
	0x4c, 0xf4, 0x0a, 0xbc, 0x49, 0xfe, 0x86, 0xa6, 0x33, 0x22, 0xde, 0x3a, 0xa9, 0xfa, 0xee, 0xbc,
	0x75, 0x94, 0x53, 0x6c, 0x3c, 0x36, 0xbe, 0x75, 0xee, 0x81, 0xa7, 0x2a, 0x26, 0x51, 0xf1, 0xbb,
	0xb2, 0x32, 0x92, 0xe8, 0xcf, 0x01, 0xb8, 0x6a, 0xa3, 0x0e, 0xb8, 0xe6, 0xb2, 0xc1, 0xda, 0x32,
	0xf4, 0x3e, 0xd8, 0xe2, 0x53, 0xdd, 0xe7, 0xed, 0x16, 0x92, 0xc6, 0x76, 0x3f, 0x48, 0x92, 0x37,
	0xf5, 0x83, 0xdd, 0x1a, 0xab, 0x3d, 0xfd, 0xf0, 0x10, 0x06, 0x45, 0x26, 0x98, 0x0f, 0x4e, 0xef,
	0xd6, 0xf7, 0x4e, 0x93, 0xe1, 0x78, 0x50, 0x64, 0x66, 0x4e, 0xb8, 0x8d, 0x39, 0x61, 0x7a, 0xc9,
	0x6b, 0xf6, 0x52, 0x6f, 0xed, 0xb6, 0xfa, 0x01, 0xb6, 0xf7, 0x43, 0xd0, 0xee, 0x87, 0x7b, 0xe0,
	0x95, 0x04, 0x2f, 0xa6, 0x05, 0x5e, 0x89, 0xa7, 0x8d, 0x1d, 0xbb, 0x5c, 0xbe, 0xc4, 0xab, 0xe8,
	0x4b, 0xf0, 0xcf, 0x71, 0x56, 0xe0, 0x74, 0x9e, 0xcb, 0xa6, 0xd0, 0x42, 0xb7, 0x29, 0x94, 0x25,
	0xae, 0x7d, 0xa2, 0xdf, 0x78, 0xf1, 0x2b, 0xa9, 0x6f, 0x04, 0x93, 0x37, 0x7c, 0xfa, 0x34, 0xea,
	0xc9, 0x17, 0x9a, 0x67, 0xbc, 0xfe, 0x43, 0x70, 0x2b, 0x86, 0x4b, 0x5e, 0xb9, 0x3b, 0x12, 0x93,
	0x12, 0x45, 0x0f, 0xe4, 0x09, 0x49, 0xf4, 0x25, 0x23, 0x84, 0xf6, 0x6b, 0xd5, 0xee, 0xbe, 0x56,
	0x3f, 0x04, 0x5b, 0xbc, 0x6c, 0xc5, 0x5b, 0xb4, 0xf7, 0xe5, 0x2b, 0xed, 0x35, 0xc7, 0x5e, 0x83,
	0xe3, 0xd3, 0x3f, 0x5c, 0x18, 0xaa, 0x89, 0xf1, 0x9c, 0x95, 0x04, 0x67, 0xe8, 0x14, 0x82, 0x0b,
	0xc2, 0xcc, 0x33, 0xff, 0x50, 0x6f, 0x18, 0x93, 0xd7, 0x3f, 0x2c, 0x49, 0xb9, 0x1a, 0xdd, 0x6a,
	0x8f, 0x9a, 0x0a, 0x9d, 0xc1, 0xf0, 0x3b, 0x4a, 0x5f, 0x2d, 0x0b, 0x3d, 0x42, 0xbb, 0xab, 0x3a,
	0x03, 0x8a, 0x2f, 0xfa, 0xb1, 0xa8, 0x48, 0xc9, 0xea, 0x45, 0x2d, 0x97, 0x9e, 0x45, 0x9f, 0xc0,
	0xf0, 0x1b, 0xb2, 0x20, 0x8c, 0x68, 0xc5, 0xb0, 0x71, 0xd2, 0x24, 0x19, 0x05, 0x5a, 0x7c, 0x96,
	0x2e, 0xd0, 0x99, 0x08, 0xc5, 0xbc, 0xe5, 0xba, 0xa0, 0x50, 0xe7, 0x51, 0x50, 0xa1, 0x53, 0xd8,
	0x97, 0xb1, 0x98, 0x75, 0xad, 0x23, 0xba, 0x4f, 0x4e, 0xf4, 0x05, 0xec, 0xcb, 0x50, 0x8c, 0xa6,
	0x67, 0xe7, 0xde, 0xd3, 0x9e, 0xc0, 0xde, 0x05, 0x61, 0x75, 0x35, 0x6e, 0xc3, 0x58, 0x7b, 0x19,
	0x8c, 0xa6, 0x0e, 0x37, 0x62, 0x34, 0x1e, 0x9f, 0x6b, 0x8c, 0x46, 0xd3, 0x75, 0xea, 0x5b, 0x77,
	0x0c, 0xfe, 0x05, 0x61, 0x6a, 0x68, 0x77, 0xe1, 0x1d, 0xac, 0xdf, 0x39, 0xfc, 0xae, 0x0c, 0x24,
	0x36, 0x39, 0x9c, 0x5b, 0xc0, 0x5a, 0x57, 0x14, 0x7a, 0x04, 0xc1, 0x24, 0xe7, 0xa8, 0xd4, 0x28,
	0x5f, 0x37, 0x77, 0xdc, 0x65, 0x46, 0xcd, 0xe8, 0xd9, 0xca, 0x96, 0x99, 0x62, 0x67, 0x70, 0xa0,
	0xd8, 0x32, 0xaa, 0xcd, 0x74, 0xe9, 0xad, 0x6b, 0xba, 0xb4, 0xa6, 0xeb, 0xd4, 0xb7, 0xee, 0x33,
	0x80, 0x0b, 0xc2, 0xf4, 0x5d, 0xbe, 0xad, 0x7b, 0xcc, 0x74, 0x79, 0xac, 0xbb, 0x47, 0xaf, 0x6a,
	0xa1, 0xeb, 0xcc, 0x9a, 0xba, 0x75, 0xea, 0x73, 0x5a, 0x2e, 0xdd, 0x45, 0x2f, 0x1d, 0xf1, 0x1f,
	0xfe, 0xec, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x3b, 0xc9, 0x1f, 0x0f, 0x10, 0x00, 0x00,
}
