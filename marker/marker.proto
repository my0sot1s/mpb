syntax="proto3";


package marker;

import "common/common.proto";
option go_package = "github.com/my0sot1s/mpb/marker";

service MarkerStream {
		// tag
		rpc GetTags (TagsRequest) returns (TagsResponse);
		rpc UpsertTag (Tag) returns (Tag);
		rpc DeleteTag (common.ReqId) returns (common.Nil);
		// cate
		rpc GetTopics (TopicsRequest) returns (TopicsResponse);
		rpc GetTopic (common.ReqId) returns (Topic);
		rpc UpsertTopic (Topic) returns (Topic);
		rpc DeleteTopic (common.ReqId) returns (common.Nil);
}



message TagsResponse {
	repeated Tag tags =1;
	string anchor = 2;
	string total = 3;
}

message TagsRequest {
	string anchor = 1;
	string scope = 2;
	int32 limit = 3;
	string order_by = 4;
}

message Tag {
	string id = 1;
	string display = 2;
	string scope = 3;
	repeated string notes= 4;
	int64 created = 6;
	enum State {
		availabled = 0;
		deleted = 1;
	}
	string state = 5;
}

message TopicsResponse {
	repeated Topic topics = 1;
	string anchor = 2;
	int32 total = 3;
}
message TopicsRequest {
	string anchor = 1;
	string scope = 2;
	int32 limit = 3;
	string order_by = 4;
}

message Topic {
	string id = 1;
	string name = 2;
	string scope = 3; // for service
	enum TopicType {
		blog = 0;
		product = 1;
		category = 2;
		group = 3;
	}
	string type = 4; // for using
	repeated string tags_id = 5;
	repeated Tag tags = 6;
	string pre_url = 7;
	int64 created = 8;
	repeated Topic childrens = 9;
	enum State {
		activated = 0;
		inactivated = 1;
		deleted = 2;
	}
	string state = 10;
}