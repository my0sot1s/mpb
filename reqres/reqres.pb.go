// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reqres.proto

package reqres

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqQuery struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Anchor               string   `protobuf:"bytes,3,opt,name=anchor,proto3" json:"anchor,omitempty"`
	OrderBy              string   `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqQuery) Reset()         { *m = ReqQuery{} }
func (m *ReqQuery) String() string { return proto.CompactTextString(m) }
func (*ReqQuery) ProtoMessage()    {}
func (*ReqQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_reqres_d59f984a2ea6dcef, []int{0}
}
func (m *ReqQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqQuery.Unmarshal(m, b)
}
func (m *ReqQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqQuery.Marshal(b, m, deterministic)
}
func (dst *ReqQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqQuery.Merge(dst, src)
}
func (m *ReqQuery) XXX_Size() int {
	return xxx_messageInfo_ReqQuery.Size(m)
}
func (m *ReqQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ReqQuery proto.InternalMessageInfo

func (m *ReqQuery) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqQuery) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReqQuery) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

func (m *ReqQuery) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type ReqId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqId) Reset()         { *m = ReqId{} }
func (m *ReqId) String() string { return proto.CompactTextString(m) }
func (*ReqId) ProtoMessage()    {}
func (*ReqId) Descriptor() ([]byte, []int) {
	return fileDescriptor_reqres_d59f984a2ea6dcef, []int{1}
}
func (m *ReqId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqId.Unmarshal(m, b)
}
func (m *ReqId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqId.Marshal(b, m, deterministic)
}
func (dst *ReqId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqId.Merge(dst, src)
}
func (m *ReqId) XXX_Size() int {
	return xxx_messageInfo_ReqId.Size(m)
}
func (m *ReqId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqId.DiscardUnknown(m)
}

var xxx_messageInfo_ReqId proto.InternalMessageInfo

func (m *ReqId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ServiceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	By                   string   `protobuf:"bytes,2,opt,name=by,proto3" json:"by,omitempty"`
	Payload              string   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	UserId               []string `protobuf:"bytes,4,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId              []string `protobuf:"bytes,5,rep,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceReq) Reset()         { *m = ServiceReq{} }
func (m *ServiceReq) String() string { return proto.CompactTextString(m) }
func (*ServiceReq) ProtoMessage()    {}
func (*ServiceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_reqres_d59f984a2ea6dcef, []int{2}
}
func (m *ServiceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceReq.Unmarshal(m, b)
}
func (m *ServiceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceReq.Marshal(b, m, deterministic)
}
func (dst *ServiceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceReq.Merge(dst, src)
}
func (m *ServiceReq) XXX_Size() int {
	return xxx_messageInfo_ServiceReq.Size(m)
}
func (m *ServiceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceReq proto.InternalMessageInfo

func (m *ServiceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceReq) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

func (m *ServiceReq) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *ServiceReq) GetUserId() []string {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *ServiceReq) GetGroupId() []string {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqQuery)(nil), "reqres.ReqQuery")
	proto.RegisterType((*ReqId)(nil), "reqres.ReqId")
	proto.RegisterType((*ServiceReq)(nil), "reqres.ServiceReq")
}

func init() { proto.RegisterFile("reqres.proto", fileDescriptor_reqres_d59f984a2ea6dcef) }

var fileDescriptor_reqres_d59f984a2ea6dcef = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd0, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x71, 0xc5, 0xad, 0xe3, 0xf6, 0x84, 0x3a, 0x58, 0x88, 0x9a, 0x2d, 0xca, 0xd4, 0x89,
	0x85, 0x37, 0x60, 0xcb, 0x88, 0x79, 0x80, 0x2a, 0xce, 0x9d, 0xc0, 0x52, 0xc1, 0xf1, 0x35, 0x41,
	0x32, 0x4f, 0x8f, 0xec, 0x84, 0x85, 0x8e, 0x3f, 0x7d, 0x96, 0xfe, 0x27, 0xc3, 0x1d, 0x53, 0x64,
	0xba, 0x3e, 0x8d, 0x1c, 0xa6, 0xa0, 0xeb, 0x45, 0xed, 0x00, 0x3b, 0x4b, 0xf1, 0x75, 0x26, 0x4e,
	0xfa, 0x00, 0xc2, 0xa3, 0xa9, 0x9a, 0xea, 0xb4, 0xb7, 0xc2, 0xa3, 0xbe, 0x07, 0x79, 0xf1, 0x9f,
	0x7e, 0x32, 0xa2, 0xa9, 0x4e, 0xd2, 0x2e, 0xd0, 0x0f, 0x50, 0xf7, 0x5f, 0xc3, 0x47, 0x60, 0xb3,
	0x29, 0x2f, 0x57, 0xe9, 0x47, 0xd8, 0x05, 0x46, 0xe2, 0xb3, 0x4b, 0x66, 0x5b, 0x16, 0x55, 0xfc,
	0x92, 0xda, 0x23, 0x48, 0x4b, 0xb1, 0xc3, 0xff, 0x85, 0xf6, 0x07, 0xe0, 0x8d, 0xf8, 0xdb, 0x0f,
	0x64, 0x29, 0xde, 0xf4, 0x0f, 0x20, 0x5c, 0x2a, 0xf1, 0xbd, 0x15, 0x2e, 0x69, 0x03, 0x6a, 0xec,
	0xd3, 0x25, 0xf4, 0xb8, 0xa6, 0xff, 0xa8, 0x8f, 0xa0, 0xe6, 0x2b, 0xf1, 0xd9, 0xa3, 0xd9, 0x36,
	0x9b, 0x7c, 0x54, 0x66, 0x87, 0xf9, 0xa8, 0x77, 0x0e, 0xf3, 0x98, 0x17, 0x59, 0x16, 0x55, 0xdc,
	0xa1, 0xab, 0xcb, 0x47, 0x3c, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x60, 0xdb, 0xa8, 0x5d, 0x18,
	0x01, 0x00, 0x00,
}
